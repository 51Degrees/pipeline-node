trigger: none

pool:
  vmImage: "ubuntu-latest"

strategy:
  matrix:
    node_6_x:
      node_version: 6.x
    node_8_x:
      node_version: 8.x
    node_10_x:
      node_version: 10.x
    node_12_x:
      node_version: 12.x

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: "Install Node.js"

  - script: |
      content='{ 
        "name": "pipeline-node", 
        "version": "1.0.0", 
        "description": "Temporary package to allow all tests to run using the local code as dependencies", 
        "main": "index.js", 
        "scripts": { 
          "test": "jest --ci --reporters=jest-junit --reporters=default --coverage --coverageReporters=cobertura" 
          }, 
        "repository": { 
          "type": "git", "url": "https://github.com/51Degrees/pipeline-node" 
          }, 
        "author": "51Degrees",
        "dependencies": { 
          "jest": "^24.9.0",
          "jest-junit": "^9.0.0",
          "mustache": "^4.0.1",
          "uglify-js": "^3.8.1",
          "eslint": "^6.8.0",
          "eslint-config-standard": "^14.1.1",
          "eslint-plugin-import": "^2.20.2",
          "eslint-plugin-node": "^11.1.0",
          "eslint-plugin-promise": "^4.2.1",
          "eslint-plugin-standard": "^4.0.1"
          },
        "jest-junit": {
            "outputName": "'"$NODE_VERSION"'.xml"    
          } 
        }'
      echo $content
      echo $content > package.json
    displayName: "Create package.json for tests"

  - script: |
      npm install
      npm test
    displayName: "Build and Test"

  - script: |
      eslint='{
          "env": {
              "browser": true,
              "commonjs": true,
              "es6": true
          },
          "extends": [
              "standard"
          ],
          "globals": {
              "Atomics": "readonly",
              "SharedArrayBuffer": "readonly",
              "test": true,
              "jest": true,
              "expect": true
          },
          "parserOptions": {
              "ecmaVersion": 2018
          },
          "rules": {
              "node/no-deprecated-api": "off",
              "no-throw-literal": "off",
              "no-path-concat": "off",
              "no-prototype-builtins": "off",
              "no-eval": "off",
              "semi": [
                  2,
                  "always"
              ]
          }
        }'
      echo $eslint
      echo $eslint > .eslintrc
      npm install -g eslint
      eslint **/*.js
    displayName: "Set up and run eslint"
    condition: ne(variables['node_version'], '6.x')

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testRunner: JUnit
      testResultsFiles: "**/$(node_version).xml"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/**/coverage"
